name: Translation Pull Request (Labeled)
on:
  pull_request:
    types: [labeled]

permissions:
  contents: read
  issues: write
  pull-requests: write
  discussions: write
    
jobs:
  action:
    runs-on: ubuntu-latest
    continue-on-error: true
    steps:
  
    - name: Checkout Branch
      uses: actions/checkout@v3
  
    - name: Lookup Translation Info
      id: translation-info
      run: |
          while IFS= read -r line; do
              echo "Read translation info: $line"
              if [[ "$line" =~ ^#.* ]]; then
                  echo "Skipping line (comment)"
                  continue
              fi              
              line_parts=($line)              
              n=3
              if [ "${#line_parts[@]}" -lt "${n}" ]; then
                  echo "Skipping line (wrong number of elements)"
                  continue
              fi
          
              wasFound=false
              language_code=${line_parts[0]}
              filepath=${line_parts[1]}
              issue=${line_parts[2]}                  
              if [ "${language_code}" == "${{github.event.label.name}}" ]; then                  
                  wasFound=true
                  echo "Found translation info: ${{github.event.label.name}}"
                  echo "language=${{github.event.label.name}}" >> $GITHUB_OUTPUT                  
                  echo "filepath=$filepath" >> $GITHUB_OUTPUT
                  echo "issue=$issue" >> $GITHUB_OUTPUT                  
                  break
              fi                          
          done < .github/TRANSLATIONS
          echo "result=$wasFound" >> $GITHUB_OUTPUT
      
    - name: Draft comment
      id: draft-comment
      if: steps.translation-info.outputs.result == 'true'
      run: |      
          filepath=${{steps.translation-info.outputs.filepath}}
          issue=${{steps.translation-info.outputs.issue}}
          comment="#$issue<br/>"
                  
          echo "language=${{steps.translation-info.outputs.language}}" >> $GITHUB_OUTPUT
          echo "filepath=$filepath" >> $GITHUB_OUTPUT
          echo "comment=$comment" >> $GITHUB_OUTPUT          
          echo "result=true" >> $GITHUB_OUTPUT
           
    - name: Create comment
      id: create-comment
      if: steps.draft-comment.outputs.result
      uses: peter-evans/create-or-update-comment@v2
      with:
          issue-number: ${{ github.event.pull_request.number }}
          body: ${{ steps.draft-comment.outputs.comment }}
          
