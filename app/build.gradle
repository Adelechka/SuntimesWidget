apply plugin: 'com.android.application'

android
{
    compileSdkVersion 24
    buildToolsVersion '24.0.2'

    sourceSets
    {
        main
        {
            manifest.srcFile 'src/main/AndroidManifest.xml'
            java.srcDirs = ['src/main/java']
            res.srcDirs = ['src/main/res']
            assets.srcDirs = ['assets']
        }
    }

    defaultConfig
    {
        applicationId "com.forrestguice.suntimeswidget"
        minSdkVersion 10
        targetSdkVersion 24
        versionCode 9
        versionName "0.3.0"

        buildConfigField "java.util.Date", "BUILD_TIME", "new java.util.Date(" + getDateAsMillis() + "L)"
        buildConfigField "String", "GIT_HASH", "\"${getGitHash()}\""

        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }

    buildTypes
    {
        release
        {
            minifyEnabled true
            shrinkResources true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    lintOptions
    {
        disable 'MissingTranslation'
    }
}

dependencies
{
    compile 'com.android.support:design:24.2.1'
    compile 'com.android.support:appcompat-v7:24.2.1'
    compile 'com.github.forrestguice:sunrisesunsetlib-java:SunriseSunsetCalculator-1.2-p0-fixdst'
    compile 'com.github.caarmen.SunriseSunset:lib-sunrise-sunset:1.1.0'

    androidTestCompile 'com.jraska:falcon:1.0.4'
    androidTestCompile 'com.android.support:support-annotations:24.2.1'
    androidTestCompile 'com.android.support.test:runner:0.5'
    androidTestCompile 'com.android.support.test:rules:0.5'
    androidTestCompile 'com.android.support.test.espresso:espresso-core:2.2.2'
}

configurations.all {
    resolutionStrategy.cacheChangingModulesFor 0, 'seconds'
}

def getDateAsMillis()
{
    def Calendar cal = Calendar.getInstance();
    return cal.getTimeInMillis().toString()
}

def getGitHash()
{
    def stdout = new ByteArrayOutputStream()
    exec {
        commandLine 'git', 'rev-parse', '--short', 'HEAD'
        standardOutput = stdout
    }
    return stdout.toString().trim()
}
